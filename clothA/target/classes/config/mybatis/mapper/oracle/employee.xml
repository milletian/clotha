<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="config.mybatis.mapper.oracle.employee">
	
	<select id="selectEmployee" resultType="EmployeeVo" parameterType="String" >
		select * from employee where emp_no=#{empNo}
	</select>
	
	<select id="selectPwd" parameterType="string" resultType="String" >
		select emp_pwd from employee where emp_no=#{empNo}
	</select>
	
	<insert id="insertEmployee" parameterType="EmployeeVO" >
		insert into employee(EMP_NO, DEPT_NO, EMP_NAME, EMP_PWD, EMP_ZIPCODE, EMP_ADDRESS,
		          EMP_JUMIN, EMP_TEL, EMP_FACE, EMP_JOB, GRADE_CODE, STORE_CODE, EMP_EMAIL, EMP_JOINDATE, EMP_DEL)
        values(employee_seq.nextval, #{deptNo}, #{empName}, #{empPwd}, #{empZipcode}, #{empAddress}, #{empJumin},
                  #{empTel},#{empFace},#{empJob},#{gradeCode},#{storeCode},#{empEmail}, to_char(sysdate,'YYYY/MM/DD'), 'Y')
	</insert>
	
	<update id="changePwd" parameterType="employeeVo">
		update employee set emp_pwd = #{empPwd} where emp_no = #{empNo}
	</update>
	
	<select id="idcheck" parameterType="string" resultType="int" >
		select count(*) from employee where emp_no=#{empNo}
	</select>
	
	<update id="pwdCountUp" parameterType="string" >
		update employee set emp_count= emp_count +1 where emp_no = #{empNo}
	</update>
	
	<update id="countZero" parameterType="logVo" >
		update employee set emp_count= 0 where emp_no=#{empNo}
	</update>
	
	<select id="selectAll" resultType="EmployeeVO" parameterType="EmployeeVO">
		select * from employee
		<if test="empNo!='전체' and empNo!=null and empNo!=''">
			emp_No =#{empNo}		
		</if>
		<if test="searchKeyword!='' and searchKeyword!=null">
			and ${searchCondition} like '%' || #{searchKeyword} || '%'		
		</if>
		order by
		store_code desc
	</select>
	
	<select id="selectEmp" parameterType="EmployeeVO"	resultType="map">
		select e.STORE_CODE, e.EMP_NO, EMP_NAME, EMP_ZIPCODE, EMP_ADDRESS, EMP_JUMIN,
        EMP_TEL, EMP_EMAIL, EMP_JOB, to_char(EMP_JOINDATE,'YYYY/MM/DD') as EMP_JOINDATE,  to_char(EMP_OUTDATE,'YYYY/MM/DD') as EMP_OUTDATE, 
        e.GRADE_CODE, e.DEPT_NO, d.DEPT_NAME, g.GRADE_NAME, s.STORE_NAME 
		from EMPLOYEE e join DEPT d
		ON e.DEPT_NO = d.DEPT_NO
		join GRADE g
		ON e.GRADE_CODE = g.GRADE_CODE
		left outer join STORE s
		on e.STORE_CODE = s.STORE_CODE
		
		<where>
			<if test="storeCode!=null and storeCode!=''">
				e.store_code=#{storeCode}
			</if>
			<if test="empName!=null and empName!=''">
				and emp_name like '%' || #{empName} || '%'
			</if>
			<if test="deptNo!=null and deptNo!=''">
				and e.dept_No=#{deptNo}
			</if>
			<if test="gradeCode!=null and gradeCode!=''">
				and e.grade_code=#{gradeCode}
			</if>
			<if test="empOutdate==null or empOutdate==''">
				and emp_outdate is null
			</if>
		</where>
		order by e.grade_code asc
	</select>
	<select id="selectByEmpNo" parameterType="String" resultType="map">
		select e.STORE_CODE, e.EMP_NO, e.EMP_NAME, e.EMP_ZIPCODE, e.EMP_ADDRESS, e.EMP_JUMIN,
        e.EMP_TEL, e.EMP_EMAIL, e.EMP_JOB, e.EMP_JOINDATE, e.EMP_OUTDATE, e.EMP_FACE,
        e.GRADE_CODE, e.DEPT_NO, d.DEPT_NAME, g.GRADE_NAME, e.EMP_DEL
		from EMPLOYEE e join DEPT d
		on e.DEPT_NO = d.DEPT_NO
		join GRADE g
		ON e.GRADE_CODE = g.GRADE_CODE
		where e.EMP_NO=#{empNo}
	</select>
	
	<update id="updateEmp" parameterType="EmployeeVO">
	update employee
	set DEPT_NO=#{deptNo},EMP_NAME=#{empName},EMP_PWD=#{empPwd},EMP_ZIPCODE=#{empZipcode},EMP_ADDRESS=#{empAddress},
		EMP_JUMIN=#{empJumin},EMP_TEL=#{empTel},EMP_FACE=#{empFace},EMP_JOB=#{empJob},GRADE_CODE=#{gradeCode}, EMP_EMAIL=#{empEmail}
	where EMP_NO=#{empNo}
	</update>
	
	<update id="delConfirm" parameterType="String">
	update employee
	set EMP_OUTDATE=to_char(sysdate,'YYYY/MM/DD')
	where EMP_NO=#{empNo}
	
	</update>
	
	<select id="empApprove" parameterType="String" resultType="map">
	select e.STORE_CODE, e.EMP_NO, EMP_NAME, EMP_ZIPCODE, EMP_ADDRESS, EMP_JUMIN,  EMP_TEL, EMP_EMAIL,
	       EMP_JOB, to_char(EMP_JOINDATE,'YYYY/MM/DD') as EMP_JOINDATE,  to_char(EMP_OUTDATE,'YYYY/MM/DD') as EMP_OUTDATE, 
           e.GRADE_CODE, e.DEPT_NO, d.DEPT_NAME, g.GRADE_NAME, s.STORE_NAME , EMP_DEL
	from EMPLOYEE e join DEPT d
		ON e.DEPT_NO = d.DEPT_NO
		join GRADE g
		ON e.GRADE_CODE = g.GRADE_CODE
		left outer join STORE s
		on e.STORE_CODE = s.STORE_CODE
	where EMP_DEL = 'N'		
		order by e.grade_code asc
	</select>
	
	<update id="appConfirm" parameterType="String">
	update employee
	set EMP_JOINDATE=to_char(sysdate,'YYYY/MM/DD'), EMP_DEL='Y'
	where EMP_NO=#{empNo}
	</update>

	<select id="empSearch" parameterType="EmployeeVO"	resultType="map">
		select e.STORE_CODE, e.EMP_NO, EMP_NAME, EMP_ZIPCODE, EMP_ADDRESS, EMP_JUMIN,
        EMP_TEL, EMP_EMAIL, EMP_JOB, to_char(EMP_JOINDATE,'YYYY/MM/DD') as EMP_JOINDATE,  to_char(EMP_OUTDATE,'YYYY/MM/DD') as EMP_OUTDATE, 
        e.GRADE_CODE, e.DEPT_NO, d.DEPT_NAME, g.GRADE_NAME, s.STORE_NAME 
		from EMPLOYEE e join DEPT d
		ON e.DEPT_NO = d.DEPT_NO
		join GRADE g
		ON e.GRADE_CODE = g.GRADE_CODE
		left outer join STORE s
		on e.STORE_CODE = s.STORE_CODE
		where e.GRADE_CODE=3 and e.STORE_CODE is null
	</select>	
	
	
</mapper>








