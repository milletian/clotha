<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="config.mybatis.mapper.oracle.mail">

	<insert id="insertMail" parameterType="mailVo">
			<selectKey order="BEFORE" keyProperty="mailNo" resultType="int"  >
				select log_seq.nextval from dual
			</selectKey>
		insert into mail(mail_no,sender,mail_content,mail_file,mail_name)
		values(#{mailNo},#{sender},#{mailContent},#{mailFile},#{mailName})
	</insert>
	
	<insert id="insertGet" parameterType="mailVo">
		insert into get_mail(get_mail_pk,mail_no,emp_no)
		values(get_mail_seq.nextval,#{mailNo},#{empNo})
	</insert>
	
	<select id="selectGetMail" parameterType="string" resultType="mailVo">
		select m.* , e.emp_name
		from mailview m join employee e
		on m.sender = e.emp_no
		where m.emp_no = #{empNo} and m.get_mail_del = 'N' and m.get_mail_save is null 
		order by m.mail_no desc
	</select>
	
	<select id="selectDetail" parameterType="mailVo" resultType="mailVo" >
		select m.* , e.emp_name
		from mailview m join employee e
		on m.sender = e.emp_no
		where m.mail_no = #{mailNo} and m.emp_no = #{empNo}
		order by m.mail_no desc
	</select>
	
	<update id="mailRead" parameterType="mailVo">
		update mailview set get_mail_read='Y' where emp_no = #{empNo} and mail_no = #{mailNo}
	</update>
	
	<update id="deleteMail" parameterType="mailVo">
		update get_mail set get_mail_del = 'Y' where mail_no=#{mailNo} and emp_no = #{empNo}
	</update>
	
	<select id="selectSender" parameterType="String" resultType="mailVo" >
		select * from mail where sender = #{empNo} and mail_senderdel = 'N' and mail_save is null
		order by mail_no desc
	</select>
	
	<select id="sendMailDetail" parameterType="int" resultType="mailVo" >
		select * from mail where mail_no = #{mailNo}
	</select>
	
	<select id="sendEmpNO" parameterType="int" resultType="mailVo" >
		select g.*,e.EMP_NAME from 
		get_mail g join employee e
		on g.EMP_NO = e.EMP_NO 
		where g.mail_no = #{mailNo}
		order by g.mail_no desc
	</select>
	
	<update id="sendDelete" parameterType="int">
		update mail set mail_senderdel = 'Y' where mail_no=#{mailNo}
	</update>
	
	<update id="sendMulti" parameterType="map">
		update mail set mail_senderdel = 'Y'
		where mail_no in 
		<foreach item="mailNo" collection="nos" open="(" close=")" separator=","
			index="index">
			#{mailNo}
		</foreach>
	</update>
	
	<update id="getMulti" parameterType="map">
		update get_mail set get_mail_del = 'Y'
		where emp_no = #{empNo} and mail_no in 
		<foreach item="mailNo" collection="nos" open="(" close=")" separator=","
			index="index">
			#{mailNo}
		</foreach>
	</update>
	
	<select id="sendSave" parameterType="String" resultType="mailVo" >
		select * from
		(
			select * from mail
			where sender = #{sender} and mail_save is not null and mail_senderdel = 'N'
			order by mail_no desc
		<![CDATA[
		) where rownum <=5
		]]>
	</select>
	
	<select id="getSave" parameterType="String" resultType="mailVo" >
		select * from
		(
			select m.* , e.emp_name
			from mailview m join employee e
			on m.sender = e.emp_no
			where m.emp_no = #{empNo} and m.get_mail_save is not null and m.get_mail_del = 'N'
			order by m.mail_no desc
		<![CDATA[	
		) where rownum <=5
		]]>
	</select>
	
	<update id="getSaveUp" parameterType="map">
		update get_mail set get_mail_save = 'YES'
		where emp_no = #{empNo} and mail_no in
		<foreach item="mailNo" collection="nos" open="(" close=")" separator=","
			index="index">
			#{mailNo}
		</foreach>
	</update>
	
	<update id="sendSaveUp" parameterType="map">
		update mail set mail_save = 'YES'
		where sender = #{sender} and mail_no in
		<foreach item="mailNo" collection="nos" open="(" close=")" separator=","
			index="index">
			#{mailNo}
		</foreach>
	</update>
	
	
</mapper>









